From 0deaa7c7339e57946ec6735f3366b89bdd975bc2 Mon Sep 17 00:00:00 2001
From: Liunx <liunx163@163.com>
Date: Tue, 15 Sep 2020 17:10:00 +0800
Subject: [PATCH 1/1] add percussion support

---
 music21/instrument.py     | 1 +
 music21/midi/translate.py | 9 +++++++--
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/music21/instrument.py b/music21/instrument.py
index d882ba762..3a1778bfd 100644
--- a/music21/instrument.py
+++ b/music21/instrument.py
@@ -1041,6 +1041,7 @@ class Percussion(Instrument):
         self.percMapPitch = None
         self.instrumentName = 'Percussion'
         self.instrumentAbbreviation = 'Perc'
+        self.midiProgram = 129
 
 
 class PitchedPercussion(Percussion):
diff --git a/music21/midi/translate.py b/music21/midi/translate.py
index e19d93d6c..05bce43cd 100644
--- a/music21/midi/translate.py
+++ b/music21/midi/translate.py
@@ -1836,11 +1836,18 @@ def channelInstrumentData(s: stream.Stream,
     else:
         substreamList.append(s)  # add single
 
+    channelByInstrument = {}  # the instrument is the key
+    channelsDynamic = []  # remaining channels
+
     for subs in substreamList:
         # get a first instrument; iterate over rest
         instrumentStream = subs.recurse().getElementsByClass('Instrument')
         setAnInstrument = False
         for inst in instrumentStream:
+            # for percussion
+            if inst.midiProgram > 128:
+                channelByInstrument[inst.midiProgram] = 10
+                continue
             if inst.midiProgram not in allUniqueInstruments:
                 allUniqueInstruments.append(inst.midiProgram)
             setAnInstrument = True
@@ -1849,8 +1856,6 @@ def channelInstrumentData(s: stream.Stream,
             if None not in allUniqueInstruments:
                 allUniqueInstruments.append(None)
 
-    channelByInstrument = {}  # the instrument is the key
-    channelsDynamic = []  # remaining channels
     # create an entry for all unique instruments, assign channels
     # for each instrument, assign a channel; if we go above 16, that is fine
     # we just cannot use it and will take modulus later
-- 
2.17.1

